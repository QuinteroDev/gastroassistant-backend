from django.core.management.base import BaseCommand
from learn.models import ContentCategory, UnlockableEducationalContent
from gamification.models import Medal

class Command(BaseCommand):
    help = 'Crea contenido educativo simplificado (1 por medalla)'

    def handle(self, *args, **options):
        # Crear/obtener categor√≠a
        category, created = ContentCategory.objects.get_or_create(
            name='Contenido por Niveles',
            defaults={
                'category_type': 'ADVANCED',
                'description': 'Contenido que se desbloquea al subir de nivel',
                'icon': 'üéì',
                'order': 1
            }
        )

        # Eliminar contenido desbloqueado existente
        UnlockableEducationalContent.objects.all().delete()
        self.stdout.write('üßπ Contenido anterior eliminado')

        # Obtener medallas creadas
        medals = Medal.objects.all().order_by('required_points')
        
        if not medals.exists():
            self.stdout.write(self.style.ERROR('‚ùå No hay medallas. Ejecuta create_simplified_medals primero.'))
            return

        # Crear 1 contenido por medalla
        content_templates = [
            {
                'title': 'Fundamentos del Cuidado Digestivo',
                'summary': 'Aprende los conceptos b√°sicos para mantener una digesti√≥n saludable.',
                'content': '''# Fundamentos del Cuidado Digestivo

¬°Felicitaciones por alcanzar el nivel Bronce! ü•â

En este art√≠culo aprender√°s los fundamentos esenciales para mantener una digesti√≥n saludable.

## Conceptos B√°sicos
- Anatom√≠a digestiva b√°sica
- Proceso de digesti√≥n normal
- Factores que afectan la salud digestiva

¬°Has demostrado constancia y este es solo el comienzo!'''
            },
            {
                'title': 'Nutrici√≥n Avanzada para la Digesti√≥n',
                'summary': 'Estrategias nutricionales espec√≠ficas para optimizar tu salud digestiva.',
                'content': '''# Nutrici√≥n Avanzada para la Digesti√≥n

¬°Excelente progreso alcanzando el nivel Plata! ü•à

Estrategias nutricionales avanzadas para optimizar tu digesti√≥n.'''
            },
            {
                'title': 'T√©cnicas Avanzadas de Manejo del Estr√©s',
                'summary': 'Domina t√©cnicas profesionales para controlar el estr√©s digestivo.',
                'content': '''# T√©cnicas Avanzadas de Manejo del Estr√©s

¬°Felicitaciones por alcanzar el nivel Oro! ü•á

T√©cnicas profesionales para el manejo del estr√©s digestivo.'''
            },
            {
                'title': 'Optimizaci√≥n del Estilo de Vida',
                'summary': 'Estrategias de √©lite para optimizar tu estilo de vida digestivo.',
                'content': '''# Optimizaci√≥n del Estilo de Vida

¬°Has alcanzado el prestigioso nivel Platino! üíé

Estrategias de √©lite para la optimizaci√≥n completa.'''
            },
            {
                'title': 'Maestr√≠a en Salud Digestiva',
                'summary': 'Conocimiento de √©lite para maestros del cuidado digestivo.',
                'content': '''# Maestr√≠a en Salud Digestiva

¬°Has alcanzado el nivel Maestro! üëë

Conocimiento exclusivo para verdaderos maestros.'''
            },
            {
                'title': 'Sabidur√≠a Digestiva Suprema',
                'summary': 'El conocimiento m√°s exclusivo sobre salud digestiva.',
                'content': '''# Sabidur√≠a Digestiva Suprema

¬°√âlite Digestiva desbloqueada! ‚≠ê

Contenido exclusivo para la √©lite digestiva.'''
            }
        ]

        created_count = 0
        for i, medal in enumerate(medals):
            if i < len(content_templates):
                template = content_templates[i]
                
                UnlockableEducationalContent.objects.create(
                    title=template['title'],
                    summary=template['summary'],
                    content=template['content'],
                    category=category,
                    unlock_type='MEDAL',
                    required_medal=medal,
                    estimated_read_time=8,
                    is_active=True,
                    order=i + 1
                )
                
                created_count += 1
                self.stdout.write(f'‚úÖ Creado: {template["title"]} (Medalla: {medal.name})')

        self.stdout.write(self.style.SUCCESS(f'üéâ {created_count} contenidos educativos simplificados creados'))
# Generated by Django 5.1.7 on 2025-06-29 14:00

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Medal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre de la medalla')),
                ('description', models.TextField(verbose_name='Descripci√≥n')),
                ('icon', models.CharField(default='üèÜ', max_length=50, verbose_name='Icono (emoji)')),
                ('required_points', models.IntegerField(verbose_name='Puntos requeridos')),
                ('required_level', models.CharField(choices=[('NOVATO', 'Novato üü§'), ('BRONCE', 'Bronce ü•â'), ('PLATA', 'Plata ü•à'), ('ORO', 'Oro ü•á'), ('PLATINO', 'Platino üíé'), ('MAESTRO', 'Maestro üëë')], max_length=20, verbose_name='Nivel requerido')),
                ('required_month', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Mes requerido')),
                ('order', models.IntegerField(default=0, verbose_name='Orden dentro del mes')),
                ('week_number', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='Semana objetivo (1-4)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Est√° activa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Medalla',
                'verbose_name_plural': 'Medallas',
                'ordering': ['required_month', 'week_number', 'order'],
            },
        ),
        migrations.CreateModel(
            name='UserLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_level', models.CharField(choices=[('NOVATO', 'Novato üü§'), ('BRONCE', 'Bronce ü•â'), ('PLATA', 'Plata ü•à'), ('ORO', 'Oro ü•á'), ('PLATINO', 'Platino üíé'), ('MAESTRO', 'Maestro üëë')], default='NOVATO', max_length=20, verbose_name='Nivel actual')),
                ('current_month', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Mes actual')),
                ('total_points', models.IntegerField(default=0, verbose_name='Puntos totales acumulados')),
                ('current_month_points', models.IntegerField(default=0, verbose_name='Puntos del mes actual')),
                ('current_streak', models.IntegerField(default=0, verbose_name='Racha actual (d√≠as consecutivos)')),
                ('longest_streak', models.IntegerField(default=0, verbose_name='Racha m√°s larga')),
                ('last_activity_date', models.DateField(blank=True, null=True, verbose_name='√öltima actividad')),
                ('current_cycle_start', models.DateField(default=django.utils.timezone.now, verbose_name='Inicio del ciclo actual')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gamification_level', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Nivel de Usuario',
                'verbose_name_plural': 'Niveles de Usuario',
            },
        ),
        migrations.CreateModel(
            name='DailyPoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Fecha')),
                ('habit_points', models.IntegerField(default=0, verbose_name='Puntos por h√°bitos')),
                ('bonus_completion', models.IntegerField(default=0, verbose_name='Bonus por completar todos')),
                ('bonus_streak', models.IntegerField(default=0, verbose_name='Bonus por racha')),
                ('bonus_promoted_habit', models.IntegerField(default=0, verbose_name='Bonus h√°bito promocionado')),
                ('total_points', models.IntegerField(default=0, verbose_name='Total de puntos del d√≠a')),
                ('habits_completed', models.IntegerField(default=0, verbose_name='H√°bitos completados (‚â•2 puntos)')),
                ('habits_total', models.IntegerField(default=5, verbose_name='Total de h√°bitos activos')),
                ('streak_on_date', models.IntegerField(default=0, verbose_name='Racha en esta fecha')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_points', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Puntos Diarios',
                'verbose_name_plural': 'Puntos Diarios',
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='UserMedal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('points_when_earned', models.IntegerField(verbose_name='Puntos cuando se obtuvo')),
                ('month_when_earned', models.IntegerField(verbose_name='Mes cuando se obtuvo')),
                ('level_when_earned', models.CharField(max_length=20, verbose_name='Nivel cuando se obtuvo')),
                ('medal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.medal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earned_medals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Medalla de Usuario',
                'verbose_name_plural': 'Medallas de Usuario',
                'ordering': ['-earned_at'],
                'unique_together': {('user', 'medal')},
            },
        ),
    ]

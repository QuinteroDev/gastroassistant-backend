# Generated by Django 5.1.7 on 2025-06-29 15:57

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('gamification', '0005_auto_20250629_1623'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('category_type', models.CharField(choices=[('BASIC', 'üìö Conceptos B√°sicos'), ('NUTRITION', 'üçé Alimentaci√≥n'), ('EXERCISE', 'üèÉ Ejercicio y Movimiento'), ('STRESS', 'üßò Manejo del Estr√©s'), ('MEDICAL', 'ü©∫ Informaci√≥n M√©dica'), ('ADVANCED', 'üéì Contenido Avanzado')], max_length=20, verbose_name='Tipo de categor√≠a')),
                ('description', models.TextField(blank=True, verbose_name='Descripci√≥n')),
                ('icon', models.CharField(default='üìö', max_length=10, verbose_name='Icono')),
                ('order', models.IntegerField(default=0, verbose_name='Orden')),
                ('is_active', models.BooleanField(default=True, verbose_name='Est√° activa')),
            ],
            options={
                'verbose_name': 'Categor√≠a de Contenido',
                'verbose_name_plural': 'Categor√≠as de Contenido',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='StaticEducationalContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='T√≠tulo')),
                ('content', models.TextField(verbose_name='Contenido completo')),
                ('summary', models.TextField(blank=True, max_length=300, verbose_name='Resumen')),
                ('estimated_read_time', models.IntegerField(default=5, verbose_name='Tiempo de lectura (min)')),
                ('tags', models.CharField(blank=True, max_length=200, verbose_name='Etiquetas (separadas por comas)')),
                ('is_published', models.BooleanField(default=True, verbose_name='Publicado')),
                ('order', models.IntegerField(default=0, verbose_name='Orden en categor√≠a')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='static_content', to='learn.contentcategory', verbose_name='Categor√≠a')),
            ],
            options={
                'verbose_name': 'Contenido Educativo Fijo',
                'verbose_name_plural': 'Contenidos Educativos Fijos',
                'ordering': ['category', 'order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='UnlockableEducationalContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='T√≠tulo')),
                ('content', models.TextField(verbose_name='Contenido completo')),
                ('summary', models.TextField(blank=True, max_length=300, verbose_name='Resumen')),
                ('unlock_type', models.CharField(choices=[('MEDAL', 'Por medalla espec√≠fica'), ('POINTS', 'Por puntos del ciclo'), ('LEVEL', 'Por nivel del usuario'), ('CYCLE', 'Por n√∫mero de ciclo')], default='MEDAL', max_length=10, verbose_name='Tipo de desbloqueo')),
                ('required_points', models.IntegerField(blank=True, null=True, verbose_name='Puntos requeridos')),
                ('required_level', models.CharField(blank=True, choices=[('NOVATO', 'Novato'), ('BRONCE', 'Bronce'), ('PLATA', 'Plata'), ('ORO', 'Oro'), ('PLATINO', 'Platino'), ('MAESTRO', 'Maestro')], max_length=20, null=True, verbose_name='Nivel requerido')),
                ('required_cycle', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Ciclo requerido')),
                ('estimated_read_time', models.IntegerField(default=5, verbose_name='Tiempo de lectura (min)')),
                ('tags', models.CharField(blank=True, max_length=200, verbose_name='Etiquetas')),
                ('is_active', models.BooleanField(default=True, verbose_name='Est√° activo')),
                ('order', models.IntegerField(default=0, verbose_name='Orden en categor√≠a')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unlockable_content', to='learn.contentcategory', verbose_name='Categor√≠a')),
                ('required_medal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gamification.medal', verbose_name='Medalla requerida')),
            ],
            options={
                'verbose_name': 'Contenido Educativo Desbloqueado',
                'verbose_name_plural': 'Contenidos Educativos Desbloqueados',
                'ordering': ['category', 'order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='UserContentAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unlocked_at', models.DateTimeField(auto_now_add=True)),
                ('first_read_at', models.DateTimeField(blank=True, null=True)),
                ('last_read_at', models.DateTimeField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False, verbose_name='Ha sido le√≠do')),
                ('read_percentage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Porcentaje le√≠do')),
                ('is_favorite', models.BooleanField(default=False, verbose_name='Es favorito')),
                ('read_count', models.IntegerField(default=0, verbose_name='Veces le√≠do')),
                ('static_content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='learn.staticeducationalcontent')),
                ('unlockable_content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='learn.unlockableeducationalcontent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Acceso de Usuario a Contenido',
                'verbose_name_plural': 'Accesos de Usuario a Contenido',
            },
        ),
        migrations.CreateModel(
            name='UserReadingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_start', models.DateTimeField(auto_now_add=True)),
                ('session_end', models.DateTimeField(blank=True, null=True)),
                ('time_spent_seconds', models.IntegerField(default=0)),
                ('scroll_percentage', models.IntegerField(default=0)),
                ('completed_reading', models.BooleanField(default=False)),
                ('content_access', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learn.usercontentaccess')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sesi√≥n de Lectura',
                'verbose_name_plural': 'Sesiones de Lectura',
                'ordering': ['-session_start'],
            },
        ),
    ]
